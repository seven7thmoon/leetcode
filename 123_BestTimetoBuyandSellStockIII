/**
 * @param {number[]} prices
 * @return {number}
 */
 var maxProfit = function(prices) {
    let tempSum = 0;
    let i = 0;
    let tempArray = [];
    while(i < prices.length){
        if(prices[i+1] > prices[i]){
            tempSum = tempSum + prices[i+1] - prices[i];
            i++;
            if(i == prices.length) tempArray.push(tempSum);
        }else{
            tempArray.push(tempSum);
            tempSum = 0;
            i++;
        }
    }
    if(tempArray.length == 1){
        return tempArray[0];
    }else{
    tempArray.sort((a, b) => b - a);
    return tempArray[0] + tempArray[1];
    }

}
let prices = [1,2,4,2,5,7,2,4,9,0];
console.log(maxProfit(prices));
//討論區的解
// var maxProfit = function(prices) {
//     const bestFromLeft = new Array(prices.length);    
//     bestFromLeft[0] = 0;
    
//     let min = prices[0];
//     for (let i=1; i<prices.length; i++) {
//         min = Math.min(min, prices[i]);
//         bestFromLeft[i] = Math.max(prices[i]-min, bestFromLeft[i-1]);
//     }
    
//     let max = prices[prices.length-1];
//     let bestFromRight = 0;
//     let best = 0;
//     for (let i=prices.length-2; i>=0; i--) {
//         max = Math.max(max, prices[i]);
//         bestFromRight = Math.max(max - prices[i], bestFromRight);
//         best = Math.max(
//             best,
//             bestFromLeft[i] + bestFromRight
//         );     
//     }
    
//     return best;
// };